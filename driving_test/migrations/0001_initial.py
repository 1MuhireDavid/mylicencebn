# Generated by Django 5.2.1 on 2025-05-26 09:24

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='QuestionCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Question Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField(help_text='Enter the question text (minimum 10 characters)', validators=[django.core.validators.MinLengthValidator(10)])),
                ('difficulty', models.CharField(choices=[('easy', 'Easy'), ('medium', 'Medium'), ('hard', 'Hard')], default='medium', max_length=10)),
                ('image', models.ImageField(blank=True, help_text='Optional image for the question (e.g., road signs, diagrams)', null=True, upload_to='question_images/')),
                ('explanation', models.TextField(blank=True, help_text='Optional explanation for the correct answer')),
                ('is_active', models.BooleanField(default=True, help_text='Uncheck to temporarily disable this question')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_questions', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='driving_test.questioncategory')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AnswerOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('option_text', models.CharField(max_length=200, validators=[django.core.validators.MinLengthValidator(1)])),
                ('is_correct', models.BooleanField(default=False)),
                ('order', models.PositiveIntegerField(default=0)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='driving_test.question')),
            ],
            options={
                'ordering': ['order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='TestSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('in_progress', 'In Progress'), ('completed', 'Completed'), ('abandoned', 'Abandoned')], default='in_progress', max_length=20)),
                ('score', models.IntegerField(blank=True, null=True)),
                ('total_questions', models.IntegerField(default=20)),
                ('passed', models.BooleanField(blank=True, null=True)),
                ('pass_threshold', models.IntegerField(default=12)),
                ('time_started', models.DateTimeField(auto_now_add=True)),
                ('time_completed', models.DateTimeField(blank=True, null=True)),
                ('time_taken_seconds', models.IntegerField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-time_started'],
            },
        ),
        migrations.CreateModel(
            name='TestAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_correct', models.BooleanField(default=False)),
                ('answered_at', models.DateTimeField(auto_now_add=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='driving_test.question')),
                ('selected_option', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='driving_test.answeroption')),
                ('test_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='driving_test.testsession')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('total_tests_taken', models.IntegerField(default=0)),
                ('total_tests_passed', models.IntegerField(default=0)),
                ('best_score', models.IntegerField(default=0)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddIndex(
            model_name='answeroption',
            index=models.Index(fields=['question', 'is_correct'], name='driving_tes_questio_b09009_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='answeroption',
            unique_together={('question', 'order')},
        ),
        migrations.AddIndex(
            model_name='question',
            index=models.Index(fields=['is_active', 'category'], name='driving_tes_is_acti_50453b_idx'),
        ),
        migrations.AddIndex(
            model_name='question',
            index=models.Index(fields=['difficulty'], name='driving_tes_difficu_e1f26d_idx'),
        ),
        migrations.AddIndex(
            model_name='testsession',
            index=models.Index(fields=['user', 'status'], name='driving_tes_user_id_138624_idx'),
        ),
        migrations.AddIndex(
            model_name='testsession',
            index=models.Index(fields=['time_started'], name='driving_tes_time_st_319fb7_idx'),
        ),
        migrations.AddIndex(
            model_name='testanswer',
            index=models.Index(fields=['test_session', 'is_correct'], name='driving_tes_test_se_a629f3_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='testanswer',
            unique_together={('test_session', 'question')},
        ),
    ]
